{"version":3,"sources":["api/users.js","api/categories.js","App.jsx","api/products.js","index.jsx"],"names":["id","name","sex","title","icon","ownerId","getCategoryById","categoryId","categoriesFromServer","find","category","completedProducts","map","product","user","userId","usersFromServer","App","selectedUser","setSelectedUser","useState","query","setQuery","readyProducts","inputProducts","filteredProducts","filter","toLowerCase","includes","getProductsFiltered","className","href","onClick","handleUserSelect","type","placeholder","value","onChange","event","inputQuery","pureQuery","trim","prepareQuery","target","length","colSpan","preparedProduct","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9cd6bc4e.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","/* eslint-disable quotes */\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from \"react\";\nimport \"./App.scss\";\n\nimport usersFromServer from \"./api/users\";\nimport categoriesFromServer from \"./api/categories\";\nimport productsFromServer from \"./api/products\";\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nfunction getCategoryById(categoryId) {\n  return categoriesFromServer.find(category => category.id === categoryId);\n}\n\nconst completedProducts = productsFromServer.map(product => ({\n  ...product,\n  category: getCategoryById(product.categoryId),\n  user: getUserById(getCategoryById(product.categoryId).ownerId),\n}));\n\nfunction getProductsFiltered(inputProducts, selectedUser, query) {\n  let filteredProducts = [...inputProducts];\n\n  if (selectedUser) {\n    filteredProducts = filteredProducts.filter(\n      product => product.user.name === selectedUser.name,\n    );\n  }\n\n  if (query) {\n    filteredProducts = filteredProducts.filter(\n      product => product.name.toLowerCase().includes(query),\n    );\n  }\n\n  return filteredProducts;\n}\n\nexport const App = () => {\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [query, setQuery] = useState(\"\");\n\n  const prepareQuery = (inputQuery) => {\n    const pureQuery = inputQuery.trim().toLowerCase();\n\n    setQuery(pureQuery);\n  };\n\n  const handleUserSelect = user => setSelectedUser(user);\n  const resetUserSelect = () => setSelectedUser(null);\n\n  const resetQuery = () => setQuery(\"\");\n\n  const readyProducts = getProductsFiltered(\n    completedProducts,\n    selectedUser,\n    query,\n  );\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              <a\n                data-cy=\"FilterAllUsers\"\n                href=\"#/\"\n                className={selectedUser === null ? \"is-active\" : \"\"}\n                onClick={() => resetUserSelect()}\n              >\n                All\n              </a>\n              {usersFromServer.map(user => (\n                <a\n                  data-cy=\"FilterUser\"\n                  href=\"#/\"\n                  className={selectedUser === user ? \"is-active\" : \"\"}\n                  onClick={() => handleUserSelect(user)}\n                  id={user.id}\n                >\n                  {user.name}\n                </a>\n              ))}\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value={query}\n                  onChange={event => prepareQuery(event.target.value)}\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                {query && (\n                  <span className=\"icon is-right\">\n                    {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                    <button\n                      data-cy=\"ClearButton\"\n                      type=\"button\"\n                      className=\"delete\"\n                      onClick={() => resetQuery()}\n                    />\n                  </span>\n                )}\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                href=\"#/\"\n                data-cy=\"AllCategories\"\n                className=\"button is-success mr-6 is-outlined is-active\"\n              >\n                All\n              </a>\n\n              {categoriesFromServer.map(category => (\n                <a data-cy=\"Category\" className=\"button mr-2 my-1\" href=\"#/\">\n                  {category.title}\n                </a>\n              ))}\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n          <table\n            data-cy=\"ProductTable\"\n            className=\"table is-striped is-narrow is-fullwidth\"\n          >\n            {readyProducts.length > 0 && (\n              <thead>\n                <tr>\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      ID\n                      <a href=\"#/\">\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Product\n                      <a href=\"#/\">\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort-down\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Category\n                      <a href=\"#/\">\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort-up\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      User\n                      <a href=\"#/\">\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n                </tr>\n              </thead>\n            )}\n\n            <tbody>\n              {readyProducts.length === 0 && (\n                <tr>\n                  <td colSpan=\"4\">\n                    <p data-cy=\"NoMatchingMessage\">\n                      No products matching selected criteria\n                    </p>\n                  </td>\n                </tr>\n              )}\n              {readyProducts.length > 0\n                && readyProducts.map(preparedProduct => (\n                  <tr data-cy=\"Product\" key={preparedProduct.id}>\n                    <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n                      {preparedProduct.id}\n                    </td>\n\n                    <td data-cy=\"ProductName\">{preparedProduct.name}</td>\n\n                    <td data-cy=\"ProductCategory\">\n                      {preparedProduct.category.icon}\n                      {\" - \"}\n                      {preparedProduct.category.title}\n                    </td>\n\n                    <td\n                      data-cy=\"ProductUser\"\n                      className={\n                        preparedProduct.user.sex === \"m\"\n                          ? \"has-text-link\"\n                          : \"has-text-danger\"\n                      }\n                    >\n                      {preparedProduct.user.name}\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}